{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/ContantList.js","components/layout/TextInputGroup.js","components/contacts/EditContact.js","components/contacts/AddContact.js","components/layout/Header.js","components/layout/About.js","components/layout/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$info","info","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","ContantList","Fragment","item","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","EditContact","errors","onChangeHandler","defineProperty","target","onSubmitHandler","_this$state","updateContact","preventDefault","abrupt","match","params","put","history","push","_this$state2","onSubmit","layout_TextInputGroup","lable","AddContact","newContact","post","Header","branding","href","About","NotFound","Test","title","body","console","log","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2a9c315.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  //action är en object som har type\n  switch (action.type) {\n    case \"DELETE-CONTACT\": //\"DELETE-CONTACT\" är value av type\n      return {\n        ...state, //kalla den state som redan finns\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD-CONTACT\": //\"ADD-CONTACT\" är vaur av type\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\": //\"UPDATE-CONTACT\" är vaur av type\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [\n      // {\n      //   id: 1,\n      //   name: \"Cassio Zen\",\n      //   email: \"cassiozen@gmail.com\",\n      //   phone: \"333-888-999\"\n      // },\n      // {\n      //   id: 2,\n      //   name: \"Dan Abramov\",\n      //   email: \"gaearon@somewhere.com\",\n      //   phone: \"333-111-999\"\n      // },\n      // {\n      //   id: 3,\n      //   name: \"Pete Hunt\",\n      //   email: \"floydophone@somewhere.com\",\n      //   phone: \"333-000-444\"\n      // }\n    ],\n    //Dispatches an action. This is the only way to trigger a state change.\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n  // componentDidMount() {\n  //   axios\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then(res => this.setState({ contacts: res.data }));\n  // }\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\n//import PropTypes from \"prop-types\";\nimport { Consumer } from \"../../../src/context\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  //static PropTypes = {\n  // name: PropTypes.string.isRequired,\n  // email: PropTypes.number.isRequired\n  // };\n  state = {\n    showInfo: false\n  };\n\n  onShowClick = e => {\n    this.setState({\n      showInfo: !this.state.showInfo\n    });\n  };\n  // onDeleteClick = (id, dispatch) => {\n  //   dispatch({ type: \"DELETE-CONTACT\", payload: id });\n  // };\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE-CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE-CONTACT\", payload: id });\n    }\n  };\n  render() {\n    const { id, name, email, phone } = this.props.info;\n    const { showInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-trash\"\n                  style={{ cursor: \"pointed\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt \"\n                    style={{\n                      cursor: \"pointed\",\n                      float: \"right\",\n                      color: \"green\",\n                      marginRight: \"1.5rem\"\n                      // onClick:{this.editContactHandler}\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">email: {email}</li>\n                  <li className=\"list-group-item\">phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\n//import { contacts } from \"../ContactTemp\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../../src/context\";\n\nexport default class ContantList extends Component {\n  // state = {\n  //   contacts: contacts\n  // };\n\n  // deletContant = id => {\n  //   const { contacts } = this.state;\n  //   console.log(\"hello delete item:   \" + id);\n  //   const newVContantsList = contacts.filter(contact => contact.id !== id);\n  //   this.setState({\n  //     contacts: newVContantsList\n  //   });\n  // };\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <div className=\"display-4 mb-2\">\n                <h1>\n                  <span className=\"text-secondary\">Contact</span> List\n                </h1>\n              </div>\n              {contacts.map(item => {\n                return <Contact key={item.id} info={item} />;\n              })}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"email\">{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\n// TextInputGroup.PropTypes = {\n//   name: PropTypes.string.isRequired,\n//   label: PropTypes.string.isRequired,\n//   value: PropTypes.string.isRequired,\n//   type: PropTypes.string.isRequired,\n//   placeholder: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n//   error: PropTypes.string.isRequired,\n// };\n\n// TextInputGroup.defaultProps = {\n//   type: \"text\"\n// };\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n  //   onNameChange = e => {\n  //     this.setState({ name: e.target.value });\n  //   };\n  onChangeHandler = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmitHandler = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    //Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    //gå till andra sidan-> home\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmitHandler.bind(this, dispatch)}>\n                  <TextInputGroup\n                    lable=\"name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name ...\"\n                    value={name}\n                    onChange={this.onChangeHandler}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    lable=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email ...\"\n                    value={email}\n                    onChange={this.onChangeHandler}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    lable=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone ...\"\n                    value={phone}\n                    onChange={this.onChangeHandler}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Uppdate Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  //   onNameChange = e => {\n  //     this.setState({ name: e.target.value });\n  //   };\n  onChangeHandler = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmitHandler = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      // id: uuid(),\n      name,\n      email,\n      phone\n    };\n\n    //call dispatch\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD-CONTACT\", payload: res.data });\n\n    //Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    //gå till andra sidan-> home\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmitHandler.bind(this, dispatch)}>\n                  <TextInputGroup\n                    lable=\"name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name ...\"\n                    value={name}\n                    onChange={this.onChangeHandler}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    lable=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email ...\"\n                    value={email}\n                    onChange={this.onChangeHandler}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    lable=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone ...\"\n                    value={phone}\n                    onChange={this.onChangeHandler}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\n//import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <div className=\"container\">\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 \">\n        <div>\n          <a href=\"/\" className=\"navbar-brand\">\n            {branding}\n          </a>\n        </div>\n        <ul className=\"navbar navbar-nav ml-auto \">\n          <li className=\"nav-item \">\n            <Link to=\"/\" className=\" nav-link\">\n              <i className=\"fas fa-home\" />\n              Home\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fas fa-plus\" /> Add\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fas fa-question\" /> About\n            </Link>\n          </li>\n        </ul>\n        <div />\n      </nav>\n    </div>\n  );\n};\n// function Header() {\n//   return (\n//     <div>\n//       <h1>Contact Manager</h1>\n//     </div>\n//   );\n// }\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>{this.props.match.params.id}</h1>\n        <h2>hello</h2>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Soory, that page dose not exist.</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    console.log(\" componentDidMount...\");\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n  //   componentWillMount() {\n  //     console.log(\"componentWillMount...\");\n  //   }\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>Test Componet</h1>\n        <br />\n        <h2>{title}</h2>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ContantList from \"./components/contacts/ContantList\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/layout/About\";\nimport NotFound from \"./components/layout/NotFound\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"myApp\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={ContantList} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n\n                <Route exact path=\"/about/\" component={About} />\n                <Route exact path=\"/test/\" component={Test} />\n                <Route component={NotFound} />\n\n                {/* <Route exact path=\"/about/:id\" component={About} /> */}\n                {/*från: About.js <h1>{this.props.match.params.id}</h1> */}\n              </Switch>\n              {/* <AddContact />\n              <ContantList /> */}\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}